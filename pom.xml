<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>staatsbibliothek-berlin.hsp</groupId>
  <artifactId>importservice</artifactId>
  <version>2.1.2</version>
  <packaging>war</packaging>

  <name>Import Service</name>
  <description>Import Service to handle all file uploads for the Handschriftenportal</description>

  <licenses>
    <license>
      <name>MIT License</name>
      <url>LICENSE</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>Marten Christoph</name>
      <email>Christoph.Marten@sbb.spk-berlin.de</email>
      <organization>Staatsbibliothek zu Berlin</organization>
      <organizationUrl>http://www.staatsbibliothek-berlin.de</organizationUrl>
    </developer>
    <developer>
      <name>Blondel Constantijn</name>
      <email>constantijn.blondel@sbb.spk-berlin.de</email>
    </developer>
    <developer>
      <name>Eichstaedt Konrad</name>
      <email>konrad.eichstaedt@sbb.spk-berlin.de</email>
    </developer>
    <developer>
      <name>Czarnecki Piotr</name>
      <email>piotr.czarnecki@sbb.spk-berlin.de</email>
    </developer>
    <developer>
      <name>Udo Boysen</name>
      <email>udo.boysen@sbb.spk-berlin.de</email>
    </developer>
  </developers>

  <scm>
    <developerConnection>scm:git:https://code.dev.sbb.berlin/HSP/importservice.git
    </developerConnection>
    <tag>HEAD</tag>
  </scm>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <java.version>21</java.version>
    <jacoco-maven-plugin.version>0.8.12</jacoco-maven-plugin.version>
    <maven-surefire-plugin.version>3.5.2</maven-surefire-plugin.version>
    <maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
    <jdeb.version>1.13</jdeb.version>
    <linux.userid>889</linux.userid>
    <linux.groupid>889</linux.groupid>
    <frontend-src-dir>${project.basedir}/src/main/app</frontend-src-dir>
    <node.version>v13.3.0</node.version>
    <node.env>dev</node.env>
    <hsp.messaging.version>4.0.2</hsp.messaging.version>
    <guava.version>33.4.0-jre</guava.version>
    <slf4j-api.version>2.0.16</slf4j-api.version>
    <rtfparserkit.version>1.16.0</rtfparserkit.version>
    <lombok.version>1.18.36</lombok.version>
    <commons-io.version>2.18.0</commons-io.version>
    <Saxon-HE.version>12.5</Saxon-HE.version>
    <jing.version>20151127.0.1</jing.version>
    <minify-maven-plugin.version>1.7.6</minify-maven-plugin.version>
    <thymeleaf-extras-java8time.version>3.0.4.RELEASE</thymeleaf-extras-java8time.version>
    <maven-release-plugin.version>3.1.1</maven-release-plugin.version>
    <spring-cloud-dependencies.version>2024.0.0</spring-cloud-dependencies.version>
  </properties>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.4.2</version>
    <relativePath/>
  </parent>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud-dependencies.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j-api.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <profiles>
    <!-- Default profile. -->
    <profile>
      <id>dev</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <sign.package>false</sign.package>
      </properties>
    </profile>

    <!-- Profile for the CI server. -->
    <profile>
      <id>integration</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <sign.package>true</sign.package>
        <node.env>prod</node.env>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco-maven-plugin.version}</version>
            <executions>
              <execution>
                <id>default-prepare-agent</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>default-report</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
              <execution>
                <id>default-check</id>
                <goals>
                  <goal>check</goal>
                </goals>
                <configuration>
                  <rules>
                    <!-- implementation is needed only for Maven 2 -->
                    <rule implementation="org.jacoco.maven.RuleConfiguration">
                      <element>BUNDLE</element>
                      <limits>
                        <!-- implementation is needed only for Maven 2 -->
                        <limit implementation="org.jacoco.report.check.Limit">
                          <counter>COMPLEXITY</counter>
                          <value>COVEREDRATIO</value>
                          <minimum>0.00</minimum>
                        </limit>
                      </limits>
                    </rule>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>deb</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <sign.package>false</sign.package>
        <node.env>prod</node.env>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>jdeb</artifactId>
            <groupId>org.vafer</groupId>
            <version>${jdeb.version}</version>
            <executions>
              <execution>
                <phase>package</phase>
                <id>importservice</id>
                <goals>
                  <goal>jdeb</goal>
                </goals>
                <configuration>
                  <name>Staatsbibliothek zu Berlin Handschriftenportal -
                    Import Service
                  </name>
                  <classifier>importservice</classifier>
                  <controlDir>${basedir}/src/deb/${project.artifactId}</controlDir>
                  <deb>${project.build.directory}/${project.artifactId}_${project.version}_all.deb
                  </deb>
                  <snapshotExpand>true</snapshotExpand>
                  <signPackage>${sign.package}</signPackage>
                  <signMethod>dpkg-sig</signMethod>
                  <signRole>builder</signRole>
                  <dataSet>
                    <data>
                      <type>template</type>
                      <paths>
                        <path>/etc/SBB/${project.artifactId}</path>
                        <path>/var/lib/SBB/${project.artifactId}</path>
                        <path>/data/log/${project.artifactId}</path>
                        <path>/var/run/SBB/${project.artifactId}</path>
                      </paths>
                    </data>
                    <data>
                      <src>${project.build.directory}/${project.build.finalName}.war</src>
                      <type>file</type>
                      <mapper>
                        <type>perm</type>
                        <prefix>/usr/local/SBB/usr/local/${project.artifactId}</prefix>
                        <user>${project.artifactId}</user>
                        <group>${project.artifactId}</group>
                        <filemode>755</filemode>
                      </mapper>
                    </data>
                    <data>
                      <src>${project.build.directory}/classes/application.properties</src>
                      <type>file</type>
                      <conffile>true</conffile>
                      <mapper>
                        <type>perm</type>
                        <prefix>/etc/SBB/${project.artifactId}</prefix>
                        <user>${project.artifactId}</user>
                        <group>${project.artifactId}</group>
                        <filemode>644</filemode>
                      </mapper>
                    </data>
                    <data>
                      <src>${project.build.directory}/classes/application-test.properties</src>
                      <type>file</type>
                      <conffile>true</conffile>
                      <mapper>
                        <type>perm</type>
                        <prefix>/etc/SBB/${project.artifactId}</prefix>
                        <user>${project.artifactId}</user>
                        <group>${project.artifactId}</group>
                        <filemode>644</filemode>
                      </mapper>
                    </data>
                    <data>
                      <src>${project.build.directory}/classes/application-stage.properties</src>
                      <type>file</type>
                      <conffile>true</conffile>
                      <mapper>
                        <type>perm</type>
                        <prefix>/etc/SBB/${project.artifactId}</prefix>
                        <user>${project.artifactId}</user>
                        <group>${project.artifactId}</group>
                        <filemode>644</filemode>
                      </mapper>
                    </data>
                    <data>
                      <src>${project.build.directory}/classes/application-dev-win.properties</src>
                      <type>file</type>
                      <conffile>true</conffile>
                      <mapper>
                        <type>perm</type>
                        <prefix>/etc/SBB/${project.artifactId}</prefix>
                        <user>${project.artifactId}</user>
                        <group>${project.artifactId}</group>
                        <filemode>644</filemode>
                      </mapper>
                    </data>
                    <data>
                      <src>${project.build.directory}/classes/application-dev-linux.properties</src>
                      <type>file</type>
                      <conffile>true</conffile>
                      <mapper>
                        <type>perm</type>
                        <prefix>/etc/SBB/${project.artifactId}</prefix>
                        <user>${project.artifactId}</user>
                        <group>${project.artifactId}</group>
                        <filemode>644</filemode>
                      </mapper>
                    </data>
                    <data>
                      <src>${project.build.directory}/classes/application-integration.properties
                      </src>
                      <type>file</type>
                      <conffile>true</conffile>
                      <mapper>
                        <type>perm</type>
                        <prefix>/etc/SBB/${project.artifactId}</prefix>
                        <user>${project.artifactId}</user>
                        <group>${project.artifactId}</group>
                        <filemode>644</filemode>
                      </mapper>
                    </data>
                    <data>
                      <src>${project.build.directory}/classes/application-prod.properties</src>
                      <type>file</type>
                      <conffile>true</conffile>
                      <mapper>
                        <type>perm</type>
                        <prefix>/etc/SBB/${project.artifactId}</prefix>
                        <user>${project.artifactId}</user>
                        <group>${project.artifactId}</group>
                        <filemode>644</filemode>
                      </mapper>
                    </data>
                    <data>
                      <src>${project.build.directory}/classes/application-xpath-hida.properties
                      </src>
                      <type>file</type>
                      <conffile>true</conffile>
                      <mapper>
                        <type>perm</type>
                        <prefix>/etc/SBB/${project.artifactId}</prefix>
                        <user>${project.artifactId}</user>
                        <group>${project.artifactId}</group>
                        <filemode>644</filemode>
                      </mapper>
                    </data>
                    <data>
                      <src>${project.build.directory}/classes/bootstrap.properties</src>
                      <type>file</type>
                      <conffile>true</conffile>
                      <mapper>
                        <type>perm</type>
                        <prefix>/etc/SBB/${project.artifactId}</prefix>
                        <user>${project.artifactId}</user>
                        <group>${project.artifactId}</group>
                        <filemode>644</filemode>
                      </mapper>
                    </data>

                    <data>
                      <src>${basedir}/src/deb/files/${project.artifactId}.conf</src>
                      <type>file</type>
                      <conffile>true</conffile>
                      <mapper>
                        <type>perm</type>
                        <prefix>/etc/SBB/${project.artifactId}</prefix>
                        <user>${project.artifactId}</user>
                        <group>${project.artifactId}</group>
                        <filemode>644</filemode>
                      </mapper>
                    </data>
                    <data>
                      <src>${basedir}/src/deb/files/import_upload.sh</src>
                      <type>file</type>
                      <mapper>
                        <type>perm</type>
                        <prefix>/usr/local/SBB/usr/local/${project.artifactId}</prefix>
                        <user>${project.artifactId}</user>
                        <group>${project.artifactId}</group>
                        <filemode>777</filemode>
                      </mapper>
                    </data>
                    <data>
                      <src>${basedir}/src/deb/files/${project.artifactId}.logrotate</src>
                      <type>file</type>
                      <conffile>true</conffile>
                      <mapper>
                        <type>perm</type>
                        <prefix>/etc/logrotate.d</prefix>
                        <user>root</user>
                        <group>root</group>
                        <filemode>644</filemode>
                      </mapper>
                    </data>
                    <data>
                      <src>${basedir}/src/deb/files/${project.artifactId}-tmpfiles.conf</src>
                      <type>file</type>
                      <conffile>true</conffile>
                      <mapper>
                        <type>perm</type>
                        <prefix>/etc/tmpfiles.d</prefix>
                        <user>root</user>
                        <group>root</group>
                        <filemode>644</filemode>
                      </mapper>
                    </data>
                    <data>
                      <type>link</type>
                      <symlink>true</symlink>
                      <linkName>/etc/init.d/${project.artifactId}</linkName>
                      <linkTarget>
                        /usr/local/SBB/usr/local/${project.artifactId}/${project.build.finalName}.war
                      </linkTarget>
                    </data>
                    <data>
                      <type>link</type>
                      <symlink>true</symlink>
                      <linkName>
                        /usr/local/SBB/usr/local/${project.artifactId}/${project.build.finalName}.conf
                      </linkName>
                      <linkTarget>/etc/SBB/${project.artifactId}/${project.artifactId}.conf
                      </linkTarget>
                    </data>
                    <data>
                      <type>link</type>
                      <symlink>true</symlink>
                      <linkName>
                        /usr/local/SBB/usr/local/${project.artifactId}/application.properties
                      </linkName>
                      <linkTarget>/etc/SBB/${project.artifactId}/application.properties
                      </linkTarget>
                    </data>
                    <data>
                      <type>link</type>
                      <symlink>true</symlink>
                      <linkName>
                        /usr/local/SBB/usr/local/${project.artifactId}/application-test.properties
                      </linkName>
                      <linkTarget>/etc/SBB/${project.artifactId}/application-test.properties
                      </linkTarget>
                    </data>
                    <data>
                      <type>link</type>
                      <symlink>true</symlink>
                      <linkName>
                        /usr/local/SBB/usr/local/${project.artifactId}/application-stage.properties
                      </linkName>
                      <linkTarget>/etc/SBB/${project.artifactId}/application-stage.properties
                      </linkTarget>
                    </data>
                    <data>
                      <type>link</type>
                      <symlink>true</symlink>
                      <linkName>
                        /usr/local/SBB/usr/local/${project.artifactId}/application-dev-win.properties
                      </linkName>
                      <linkTarget>/etc/SBB/${project.artifactId}/application-dev-win.properties
                      </linkTarget>
                    </data>
                    <data>
                      <type>link</type>
                      <symlink>true</symlink>
                      <linkName>
                        /usr/local/SBB/usr/local/${project.artifactId}/application-dev-linux.properties
                      </linkName>
                      <linkTarget>/etc/SBB/${project.artifactId}/application-dev-linux.properties
                      </linkTarget>
                    </data>
                    <data>
                      <type>link</type>
                      <symlink>true</symlink>
                      <linkName>
                        /usr/local/SBB/usr/local/${project.artifactId}/application-integration.properties
                      </linkName>
                      <linkTarget>/etc/SBB/${project.artifactId}/application-integration.properties
                      </linkTarget>
                    </data>
                    <data>
                      <type>link</type>
                      <symlink>true</symlink>
                      <linkName>
                        /usr/local/SBB/usr/local/${project.artifactId}/application-prod.properties
                      </linkName>
                      <linkTarget>/etc/SBB/${project.artifactId}/application-prod.properties
                      </linkTarget>
                    </data>
                    <data>
                      <type>link</type>
                      <symlink>true</symlink>
                      <linkName>
                        /usr/local/SBB/usr/local/${project.artifactId}/application-xpath-hida.properties
                      </linkName>
                      <linkTarget>/etc/SBB/${project.artifactId}/application-xpath-hida.properties
                      </linkTarget>
                    </data>
                    <data>
                      <type>link</type>
                      <symlink>true</symlink>
                      <linkName>/usr/local/SBB/usr/local/${project.artifactId}/bootstrap.properties
                      </linkName>
                      <linkTarget>/etc/SBB/${project.artifactId}/bootstrap.properties</linkTarget>
                    </data>
                    <data>
                      <type>link</type>
                      <symlink>true</symlink>
                      <linkName>/etc/SBB/${project.artifactId}/${project.artifactId}.logrotate
                      </linkName>
                      <linkTarget>/etc/logrotate.d/${project.artifactId}.logrotate</linkTarget>
                    </data>
                    <data>
                      <type>link</type>
                      <symlink>true</symlink>
                      <linkName>/etc/SBB/${project.artifactId}/${project.artifactId}-tmpfiles.conf
                      </linkName>
                      <linkTarget>/etc/tmpfiles.d/${project.artifactId}-tmpfiles.conf</linkTarget>
                    </data>
                    <data>
                      <type>link</type>
                      <symlink>true</symlink>
                      <linkName>/var/log/SBB/${project.artifactId}</linkName>
                      <linkTarget>/data/log/${project.artifactId}</linkTarget>
                    </data>
                  </dataSet>
                </configuration>
              </execution>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>jdeb</goal>
                </goals>
                <id>${project.artifactId}-all</id>
                <configuration>
                  <name>Staatsbibliothek zu Berlin Index Update Service</name>
                  <classifier>all</classifier>
                  <deb>
                    ${project.build.directory}/${project.artifactId}-all_${project.version}_all.deb
                  </deb>
                  <controlDir>${basedir}/src/deb/${project.artifactId}-all-metapackage</controlDir>
                  <snapshotExpand>true</snapshotExpand>
                  <signPackage>${sign.package}</signPackage>
                  <signMethod>dpkg-sig</signMethod>
                  <signRole>builder</signRole>
                  <dataSet>
                    <data>
                      <type>template</type>
                      <paths>
                        <path>/var/run/${project.artifactId}-all</path>
                      </paths>
                    </data>
                  </dataSet>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <dependencies>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-config</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-thymeleaf</artifactId>
    </dependency>
    <dependency>
      <groupId>org.thymeleaf.extras</groupId>
      <artifactId>thymeleaf-extras-java8time</artifactId>
      <version>${thymeleaf-extras-java8time.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.flywaydb</groupId>
      <artifactId>flyway-database-postgresql</artifactId>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.kafka</groupId>
      <artifactId>spring-kafka</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>asm</artifactId>
          <groupId>org.ow2.asm</groupId>
        </exclusion>
        <exclusion>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.junit.vintage</groupId>
          <artifactId>junit-vintage-engine</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-json</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.kafka</groupId>
      <artifactId>spring-kafka-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit-jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit-jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
       <groupId>org.junit.platform</groupId>
       <artifactId>junit-platform-launcher</artifactId>
       <version>1.11.4</version>
       <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>${junit-jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
     <dependency>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
        <version>2.8.0</version>
     </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
    </dependency>
    <dependency>
      <groupId>com.github.joniles</groupId>
      <artifactId>rtfparserkit</artifactId>
      <version>${rtfparserkit.version}</version>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons-io.version}</version>
    </dependency>
    <dependency>
      <groupId>net.sf.saxon</groupId>
      <artifactId>Saxon-HE</artifactId>
      <version>${Saxon-HE.version}</version>
    </dependency>
    <dependency>
      <groupId>de.staatsbibliothek-berlin.hsp</groupId>
      <artifactId>activitystreams-hsp</artifactId>
      <version>${hsp.messaging.version}</version>
    </dependency>
    <dependency>
      <groupId>de.staatsbibliothek-berlin.hsp</groupId>
      <artifactId>tei-jaxb</artifactId>
      <version>${hsp.messaging.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.daisy.libs/jing -->
    <dependency>
      <groupId>org.daisy.libs</groupId>
      <artifactId>jing</artifactId>
      <version>${jing.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-properties-migrator</artifactId>
      <scope>runtime</scope>
    </dependency>

    <!-- https://mvnrepository.com/artifact/com.helger.schematron/ph-schematron-xslt -->
    <dependency>
        <groupId>com.helger.schematron</groupId>
        <artifactId>ph-schematron-xslt</artifactId>
        <version>8.0.5</version>
    </dependency>
    <dependency>
      <groupId>org.apache.jena</groupId>
      <artifactId>jena-arq</artifactId>
      <version>5.2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.jena</groupId>
      <artifactId>jena-shacl</artifactId>
      <version>5.2.0</version>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <includes>
            <include>**/*Tests.java</include>
            <include>**/*Test.java</include>
          </includes>
          <excludes>
            <exclude>**/Abstract*.java</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>${maven-release-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
        <version>${maven-install-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>${maven-deploy-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>${maven-war-plugin.version}</version>
        <configuration>
          <delimiters>
            <delimiter>@</delimiter>
          </delimiters>
          <useDefaultDelimiters>false</useDefaultDelimiters>
          <failOnMissingWebXml>false</failOnMissingWebXml>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-source-plugin</artifactId>
        <version>${maven-source-plugin.version}</version>
        <configuration>
          <skipSource>true</skipSource>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <executable>true</executable>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven-javadoc-plugin.version}</version>
        <configuration>
          <failOnError>false</failOnError>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${maven-resources-plugin.version}</version>
        <configuration>
          <encoding>UTF-8</encoding>
          <delimiters>
            <delimiter>@</delimiter>
          </delimiters>
        </configuration>
        <executions>
          <execution>
            <id>position-react-build</id>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <phase>prepare-package</phase>
            <configuration>
              <outputDirectory>${project.build.outputDirectory}/static/js</outputDirectory>
              <resources>
                <resource>
                  <directory>${frontend-src-dir}/dist</directory>
                  <filtering>false</filtering>
                  <includes>
                    <include>**/*.js</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.samaxes.maven</groupId>
        <artifactId>minify-maven-plugin</artifactId>
        <version>${minify-maven-plugin.version}</version>
        <dependencies>
          <dependency>
            <groupId>org.codehaus.plexus</groupId>
            <artifactId>plexus-utils</artifactId>
            <version>3.5.1</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>default-minify</id>
            <phase>prepare-package</phase>
            <configuration>
              <charset>UTF-8</charset>
              <webappSourceDir>${basedir}/src/main/resources/static</webappSourceDir>
              <webappTargetDir>${project.build.outputDirectory}/static</webappTargetDir>
              <cssSourceDir>css</cssSourceDir>
              <cssSourceIncludes>
                <cssSourceInclude>*.css</cssSourceInclude>
              </cssSourceIncludes>
              <jsSourceDir>js</jsSourceDir>
              <jsSourceIncludes>
                <jsSourceInclude>*.js</jsSourceInclude>
              </jsSourceIncludes>
              <jsSourceExcludes>
                <jsSourceExclude>material-*.*</jsSourceExclude>
              </jsSourceExcludes>
              <jsTargetDir>js</jsTargetDir>
              <jsEngine>CLOSURE</jsEngine>
              <skipMerge>true</skipMerge>
              <nosuffix>true</nosuffix>
              <verbose>true</verbose>
            </configuration>
            <goals>
              <goal>minify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
              <artifactId>plantuml-generator-maven-plugin</artifactId>
              <groupId>de.elnarion.maven</groupId>
              <version>2.3.0</version>
              <executions>
                <execution>
                  <id>generate-simple-classdiagram</id>
                  <goals>
                    <goal>generate</goal>
                  </goals>
                  <phase>generate-test-sources</phase>
                  <configuration>
                    <outputFilename>service-classdiagramm.txt</outputFilename>
                    <outputDirectory>${project.basedir}/doc</outputDirectory>
                    <scanPackages>
                      <scanPackage>
                        staatsbibliothek.berlin.hsp.importservice.domain.service
                      </scanPackage>
                    </scanPackages>
                  </configuration>
                </execution>
              </executions>
            </plugin>
    </plugins>
  </build>
  <distributionManagement>
    <repository>
      <id>nexus3-releases</id>
      <url>https://artefakt.dev.sbb.berlin/repository/sbb-maven-releases/</url>
    </repository>
    <snapshotRepository>
      <id>nexus3-snapshots</id>
      <url>https://artefakt.dev.sbb.berlin/repository/sbb-maven-snapshots/</url>
    </snapshotRepository>
  </distributionManagement>
</project>
