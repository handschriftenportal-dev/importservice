services:
  importservice:
    image: artefakt.dev.sbb.berlin:5000/sbb/importservice:${IMPORTSERVICE_VERSION}
    ports:
      - "9296:9296"
    env_file:
      - ./importservice.env
    depends_on:
      - postgres
      - service-registry
      - broker
    networks:
      - hsp-network
  postgres:
    image: postgres:${POSTGRES_VERSION}
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=hsp-import
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d/
    networks:
      - hsp-network
  service-registry:
    image: artefakt.dev.sbb.berlin:5000/sbb/serviceregistry:${SERVICEREGISTRY_VERSION}
    ports:
      - "8761:8761"
    networks:
      - hsp-network
  broker:
    image: apache/kafka:${APACHE_KAFKA_VERSION}
    container_name: broker
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://broker:9092,CONTROLLER://broker:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_CREATE_TOPICS: "data-import,data-normdaten,tei-import"
    networks:
      - hsp-network

networks:
  hsp-network:
volumes:
  postgres_data: